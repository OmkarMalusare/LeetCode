class MyHashMap {
    
    Node [] buckets; 
    

    /** Initialize your data structure here. */
    public MyHashMap() {
        buckets = new Node [200];
    }
    
    /** value will always be non-negative. */
    public void put(int key, int value) {
        int index = getBucketIndex(key);
        Node bucket = buckets[index];
        
        if(bucket == null){
            
            bucket = new Node(key, value);
            buckets[index] = bucket;
        }
        else{
            Node prev = null;
            while(bucket != null){

                if(bucket.key == key){
                    
                    bucket.value = value;
                    return;
                }
                prev = bucket;
                bucket = bucket.next;
                
            }
            prev.next = new Node(key,value);
            
            
        }
        
        
    }
    
    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */
    public int get(int key) {
        
        int index = getBucketIndex(key);
        Node bucket = buckets[index];
        
        while(bucket!=null){
            
            if(bucket.key == key){
                
                return bucket.value;
            }
            bucket = bucket.next;
        }
        
        return -1;
        
        
    }
    
    /** Removes the mapping of the specified value key if this map contains a mapping for the key */
    public void remove(int key) {
        
        int index = getBucketIndex(key);
        Node bucket = buckets[index];
        
       if(bucket == null)
           return;
        
        while(bucket !=null){
            
            if(bucket.key == key){
                
                bucket.value = -1;
                return;
            }
            bucket = bucket.next;
        }
                 
    }
    
    
    //to retrive the array index
    public int getBucketIndex(int key){
        
        int hash = Integer.hashCode(key);
        return hash % buckets.length;
        
    }
}


class Node{
    
    int key;
    int value;
    Node next;
    
    public Node(int key, int value){
        
        this.key = key;
        this.value = value;
        this.next = null;
        
    }
    
    
}

/**
 * Your MyHashMap object will be instantiated and called as such:
 * MyHashMap obj = new MyHashMap();
 * obj.put(key,value);
 * int param_2 = obj.get(key);
 * obj.remove(key);
 */
