/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        
        
        List<List<Integer>> result = new ArrayList<>();
        
        if(root == null)
            return result;
        Queue<TreeNode> levelOrderQueue = new LinkedList<>();
        levelOrderQueue.add(root);
        int level = -1;
        while(levelOrderQueue.size()!=0){

            int size = levelOrderQueue.size();
            List<Integer> currentResult = new ArrayList<>();  
            level++;
            for(int i=0; i<size; i++){
            TreeNode current = levelOrderQueue.poll();
             currentResult.add(current.val);
            if(current.left!=null)
                levelOrderQueue.offer(current.left);
            if(current.right!=null)
                 levelOrderQueue.offer(current.right);
                  
            }
            if(level%2 == 0)
            result.add(currentResult);
            
            else{
                
                Collections.reverse(currentResult);
                result.add(currentResult);
            }
            
        }
        return result;
        
    }
}

