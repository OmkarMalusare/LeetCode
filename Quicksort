
//Modifying GeeksForGeeks solution

public class QuickSort 
{ 
    /* This function takes last element as pivot, 
       places the pivot element at its correct 
       position in sorted array, and places all 
       smaller (smaller than pivot) to left of 
       pivot and all greater elements to right 
       of pivot */
       
    int partition(int arr[], int low, int high) 
    { 
        int pivot = arr[high] ;
        
        int i = low;
        int j  = high - 1 ;
        
        //note the condition is less than or equal to pivot as we return i
        while (i<=j){
            
            //i stops at a value greater than or equal to pivot
            if(arr[i]<=pivot){
                
                i++;
                continue;
            }
            
            
            if(arr[j]<=pivot){
                
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
                
                i++;
                j--;
                continue;
            }
            
            //when both arr[i] and arr[j] are greater than pivot
            j--;
        }
        
           
         
        int temp = arr[i];
        arr[i] = arr[high];
        arr[high] = temp;
        
         
        return i; 
    } 
  
  
    /* The main function that implements QuickSort() 
      arr[] --> Array to be sorted, 
      low  --> Starting index, 
      high  --> Ending index */
    void sort(int arr[], int low, int high) 
    { 
        if (low < high) 
        { 
            /* pi is partitioning index, arr[pi] is  
              now at right place */
            int pi = partition(arr, low, high); 
  
            // Recursively sort elements before 
            // partition and after partition 
            sort(arr, low, pi-1); 
            sort(arr, pi+1, high); 
        } 
    } 
  
    /* A utility function to print array of size n */
    static void printArray(int arr[]) 
    { 
        int n = arr.length; 
        for (int i=0; i<n; ++i) 
            System.out.print(arr[i]+" "); 
        System.out.println(); 
    } 
  
   
    public static void main(String args[]) 
    { 
        int arr[] = {5,2,6,3,8,4,10,1}; 
        
        int n = arr.length; 
        printArray(arr); 
  
        QuickSort ob = new QuickSort(); 
        ob.sort(arr, 0, n-1); 
  
        System.out.println("sorted array"); 
        printArray(arr); 
    } 
}
