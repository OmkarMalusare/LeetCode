//Using Division
class Solution {
    public int[] productExceptSelf(int[] nums) {
        
        if(nums == null || nums.length < 2)
            return null;
        
        int [] output = new int[nums.length];
        
        int product = 1;
        int count = 0;
        
        for(int i=0; i<nums.length; i++){ 
            
            if(nums[i] == 0){ 
                
               count++;         
            }
            
            else{ 
                
            product *= nums[i];
            
             }
        }
        
        for(int i=0; i<nums.length; i++){
            
            if(count > 1)
            break;
            
            else if(count == 1){
                
               if(nums[i] != 0) 
                continue;
                
                else{
                    output[i] = product;
                    break;
                }
            
            }
            
            else
            output[i] = product/nums[i];
                
            }
        
        
        return output;
    }
}

Better Approach - W/o division and no extra space

//intuition - 
//[1,2,3,4]
//left = [1,1,2,3] - prodcut of all the left elements
//right = [24,12,4,1] - product of all the right elements
//output = left[i] * right[i]

class Solution {
    public int[] productExceptSelf(int[] nums) {
        
        if(nums == null || nums.length < 2)
            return null;
      
        int [] output = new int[nums.length];
        
        //using same array for both the left and right calculations
        for(int i=0; i<output.length; i++)
            output[i] = 1;
        
        int left = 1;
            for(int i=0; i<nums.length; i++){
                
                output[i] *= left;
                left *= nums[i];
                
            }
        
        int right = 1;
        for(int i=nums.length -1; i>=0; i--){
                
                output[i] *= right;
                right *= nums[i];
                
            }
        
        return output;
    }
}
